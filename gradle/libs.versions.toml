[versions]
agp = "8.7.2"
converterMoshi = "2.9.0"
coreTestingVersion = "2.1.0"
mockitoCore = "5.2.0"
mockitoKotlin = "4.1.0"
moshiKotlin = "1.14.0"
moshiKotlinCodegen = "1.14.0"
loggingInterceptor = "4.9.1"
kspv = "2.0.21-1.0.25"
coroutines = "1.7.3"
androidx-lifecycle = "2.8.7"
android-gradlePlugin = "8.7.2"
androidx-appcompat = "1.7.0"
androidx-browser = "1.8.0"
androidx-constraintlayout = "2.2.0"
androidx-coordinatorlayout = "1.2.0"
androidx-core = "1.13.1"
androidx-fragment = "1.8.5"
androidx-preference = "1.2.1"
androidx-test-espresso = "3.6.1"
androidx-test-ext-junit = "1.2.1"
google-android-material = "1.12.0"
google-ar-core = "1.46.0"
google-ar-sceneform = "1.17.1"
google-oss = "17.1.0"
google-oss-plugin = "0.10.6"
junit = "4.13.2"
kotlin = "2.0.21"
objectDetection = "17.0.2"
objectDetectionCustomVersion = "17.0.2"
robolectric = "4.10"
spotless = "6.25.0"
tensorflowLite = "2.9.0"
tensorflowLiteSupport = "0.3.1"
viewbinding = "8.7.2"
objectDetectionCustom = "17.0.2"
coreKtx = "1.6.1"


[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "androidx-browser" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-coordinatorlayout = { module = "androidx.coordinatorlayout:coordinatorlayout", version.ref = "androidx-coordinatorlayout" }
androidx-core = { module = "androidx.core:core", version.ref = "androidx-core" }
androidx-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "coreTestingVersion" }
androidx-fragment = { module = "androidx.fragment:fragment", version.ref = "androidx-fragment" }
androidx-lifecycle-livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "androidx-preference" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
google-android-material = { module = "com.google.android.material:material", version.ref = "google-android-material" }
google-oss = { module = "com.google.android.gms:play-services-oss-licenses", version.ref = "google-oss" }
google-ar-core = { module = "com.google.ar:core", version.ref = "google-ar-core" }
google-ar-sceneform-assets = { module = "com.google.ar.sceneform:assets", version.ref = "google-ar-sceneform" }
google-ar-sceneform-core = { module = "com.google.ar.sceneform:core", version.ref = "google-ar-sceneform" }
google-ar-sceneform-rendering = { module = "com.google.ar.sceneform:rendering", version.ref = "google-ar-sceneform" }
google-ar-sceneform-sceneformBase = { module = "com.google.ar.sceneform:sceneform-base", version.ref = "google-ar-sceneform" }
google-ar-sceneform-ux = { module = "com.google.ar.sceneform.ux:sceneform-ux", version.ref = "google-ar-sceneform" }
junit = { module = "junit:junit", version.ref = "junit" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
mlkitobjectdetectioncustom = { module = "com.google.mlkit:object-detection-custom", version.ref = "objectDetectionCustomVersion" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
objectdetection = { module = "com.google.mlkit:object-detection", version.ref = "objectDetection" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "converterMoshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshiKotlin" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshiKotlinCodegen" }
converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "converterMoshi" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "loggingInterceptor" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
tensorflow-lite = { module = "org.tensorflow:tensorflow-lite", version.ref = "tensorflowLite" }
tensorflow-lite-support = { module = "org.tensorflow:tensorflow-lite-support", version.ref = "tensorflowLiteSupport" }
androidx-core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "coreKtx" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "kspv" }

